<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Happy Birthday, Tiny!</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts - Inter -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;800&display=swap" rel="stylesheet">
    <style>
        /* Custom CSS for animations and enhanced styling */
        body {
            font-family: 'Inter', sans-serif;
            /* Radial gradient background for a more dynamic look */
            background: radial-gradient(circle at center, #fce4ec 0%, #e0f2f7 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            padding: 20px;
            box-sizing: border-box;
            overflow: hidden; /* Prevent scrollbars from confetti */
        }

        /* Keyframe animation for the main card pulse */
        @keyframes pulse {
            0% { transform: scale(1); box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
            50% { transform: scale(1.01); box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2), 0 10px 10px -5px rgba(0, 0, 0, 0.1); }
            100% { transform: scale(1); box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
        }

        /* Keyframe animation for text fade-in */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Apply pulse animation to the main card */
        .card-animate {
            animation: pulse 4s infinite ease-in-out;
        }

        /* Apply fade-in animation to text elements */
        .text-fade-in {
            /* Removed initial opacity: 0; here to ensure visibility if animation fails */
            animation: fadeIn 1s ease-out forwards;
        }

        /* Delay for sequential text animations */
        .text-fade-in:nth-child(1) { animation-delay: 0.2s; }
        .text-fade-in:nth-child(2) { animation-delay: 0.4s; }
        .text-fade-in:nth-child(3) { animation-delay: 0.6s; }
        .text-fade-in:nth-child(4) { animation-delay: 0.8s; }
        .text-fade-in:nth-child(5) { animation-delay: 1.0s; }

        /* Confetti animations */
        @keyframes fall {
            0% { transform: translateY(-100px) rotateZ(0deg); opacity: 1; }
            100% { transform: translateY(100vh) rotateZ(720deg); opacity: 0; }
        }
        @keyframes spin {
            0% { transform: rotateY(0deg); }
            100% { transform: rotateY(360deg); }
        }

        .confetti {
            position: fixed;
            z-index: 9999;
            pointer-events: none; /* Allow clicks to pass through */
        }
        .confetti.circle { border-radius: 50%; }
        .confetti.square { border-radius: 0; }
        .confetti.triangle {
            width: 0;
            height: 0;
            border-left: 5px solid transparent;
            border-right: 5px solid transparent;
            border-bottom: 10px solid; /* Color will be set by JS */
        }
    </style>
</head>
<body class="selection:bg-pink-300 selection:text-pink-900">
    <!-- Main content card -->
    <div class="bg-white p-6 sm:p-8 md:p-10 lg:p-12 rounded-3xl shadow-xl max-w-lg w-full text-center transform transition-all duration-300 hover:scale-[1.02] border-4 border-pink-200 card-animate relative overflow-hidden">
        <!-- SVG for a subtle celebratory icon -->
        <svg class="absolute top-4 left-4 w-10 h-10 text-pink-400 opacity-20 hidden sm:block" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
        </svg>
        <svg class="absolute bottom-4 right-4 w-10 h-10 text-purple-400 opacity-20 hidden sm:block" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
        </svg>

        <!-- Birthday Image Placeholder -->
        <img src="https://placehold.co/400x250/FFD1DC/6B7280?text=Happy+Birthday Tinyy!" alt="Birthday Celebration" class="w-full h-auto rounded-2xl mb-6 shadow-md object-cover transform scale-95 hover:scale-100 transition-transform duration-300">

        <h1 class="text-4xl sm:text-5xl md:text-6xl font-extrabold text-pink-600 mb-4 leading-tight text-fade-in">
            Happy Birthday, <span class="text-purple-700">[Tiny!!]</span>!
        </h1>

        <p class="text-lg sm:text-xl text-gray-700 mb-6 leading-relaxed text-fade-in">
            Wishing you a day and years filled with joy, laughter, and everything that makes you happy. You're the best-est friend i have ever got and I'm so grateful for you!
        </p>

        <p class="text-md sm:text-lg text-gray-600 mb-8 italic text-fade-in">
            May your year ahead be even brighter than you can imagine. As bright as stephenson 2-18
        </p>

        <!-- A small interactive element -->
        <button id="surpriseButton" class="bg-gradient-to-r from-pink-500 to-purple-600 text-white font-bold py-3 px-8 rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-pink-300 relative overflow-hidden">
            Click for a little surprise!
            <!-- Button hover effect -->
            <span class="absolute inset-0 bg-white opacity-0 transition-opacity duration-300 hover:opacity-20 rounded-full"></span>
        </button>

        <div id="surpriseMessage" class="mt-6 p-4 bg-yellow-100 text-yellow-800 rounded-xl hidden transition-all duration-500 ease-in-out opacity-0 transform translate-y-4 shadow-inner">
            <p class="font-semibold text-lg">You're the best!</p>
            <p class="text-sm">Hope you have a fantastic celebration!</p>
        </div>

        <p class="text-sm text-gray-500 mt-8 text-fade-in">
            With love, <span class="font-semibold text-gray-700">[Your Name]</span>
        </p>
    </div>

    <script>
        // JavaScript for the surprise button and confetti
        const surpriseButton = document.getElementById('surpriseButton');
        const surpriseMessage = document.getElementById('surpriseMessage');

        surpriseButton.addEventListener('click', () => {
            if (surpriseMessage.classList.contains('hidden')) {
                surpriseMessage.classList.remove('hidden');
                setTimeout(() => {
                    surpriseMessage.classList.remove('opacity-0', 'translate-y-4');
                }, 10); // Small delay for CSS transition
                createConfetti(); // Trigger confetti on surprise!
            } else {
                surpriseMessage.classList.add('opacity-0', 'translate-y-4');
                setTimeout(() => {
                    surpriseMessage.classList.add('hidden');
                }, 500); // Match transition duration
            }
        });

        // Enhanced Confetti Effect
        function createConfetti() {
            const confettiCount = 70; // More confetti!
            const colors = ['#FFD1DC', '#FFC0CB', '#FF69B4', '#DA70D6', '#BA55D3', '#9370DB', '#8A2BE2']; // Pink and purple hues
            const shapes = ['circle', 'square', 'triangle'];

            for (let i = 0; i < confettiCount; i++) {
                const confetti = document.createElement('div');
                const shape = shapes[Math.floor(Math.random() * shapes.length)];
                confetti.classList.add('confetti', shape);

                // Set size and color
                const size = Math.random() * 12 + 6; // 6px to 18px
                confetti.style.width = `${size}px`;
                confetti.style.height = `${size}px`;
                confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                if (shape === 'triangle') {
                    confetti.style.backgroundColor = 'transparent'; // Triangles use border-bottom for color
                    confetti.style.borderBottomColor = colors[Math.floor(Math.random() * colors.length)];
                    confetti.style.borderLeftWidth = `${size / 2}px`;
                    confetti.style.borderRightWidth = `${size / 2}px`;
                    confetti.style.borderBottomWidth = `${size}px`;
                }


                // Set random starting position and animation properties
                confetti.style.left = `${Math.random() * 100}vw`;
                confetti.style.top = `${Math.random() * -50 - 20}px`; // Start well above the screen
                confetti.style.opacity = Math.random() * 0.7 + 0.3; // Vary opacity
                confetti.style.transform = `rotate(${Math.random() * 360}deg)`;
                confetti.style.animation = `fall ${Math.random() * 4 + 3}s linear forwards, spin ${Math.random() * 2 + 1}s linear infinite`; // Longer fall, added spin
                confetti.style.animationDelay = `${Math.random() * 0.5}s`; // Stagger animation start

                document.body.appendChild(confetti);

                // Remove confetti after it falls to prevent too many elements
                confetti.addEventListener('animationend', () => {
                    confetti.remove();
                });
            }
        }
    </script>
</body>
</html>
